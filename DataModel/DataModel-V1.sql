SET SESSION FOREIGN_KEY_CHECKS=0;

/* Drop Tables */

DROP TABLE IF EXISTS PATIENT_ALLERGY;
DROP TABLE IF EXISTS ALLERGIES;
DROP TABLE IF EXISTS POST;
DROP TABLE IF EXISTS QUERY;
DROP TABLE IF EXISTS DOCTOR_SPECIALITY;
DROP TABLE IF EXISTS DOCTOR;
DROP TABLE IF EXISTS PATIENT;
DROP TABLE IF EXISTS USER;
DROP TABLE IF EXISTS ROLE;
DROP TABLE IF EXISTS SPECIALITIES;




/* Create Tables */

CREATE TABLE ALLERGIES
(
	ALLERGY varchar(100) NOT NULL,
	PRIMARY KEY (ALLERGY)
);


CREATE TABLE DOCTOR
(
	USER_ID int unsigned NOT NULL,
	PRIMARY KEY (USER_ID)
);


CREATE TABLE DOCTOR_SPECIALITY
(
	DOCTOR_ID int unsigned NOT NULL,
	SPECIALITY varchar(100) NOT NULL,
	PRIMARY KEY (DOCTOR_ID, SPECIALITY)
);


CREATE TABLE PATIENT
(
	USER_ID int unsigned NOT NULL,
	PRIMARY KEY (USER_ID),
	UNIQUE (USER_ID)
);


CREATE TABLE PATIENT_ALLERGY
(
	PATIENT_ID int unsigned NOT NULL,
	ALLERGY varchar(100) NOT NULL,
	PRIMARY KEY (PATIENT_ID, ALLERGY)
);


CREATE TABLE POST
(
	ID int unsigned NOT NULL AUTO_INCREMENT,
	TEXT longtext NOT NULL,
	QUERY_ID int NOT NULL,
	CREATED_ON_DATE datetime DEFAULT NOW() NOT NULL,
	UPDATED_ON_DATE datetime DEFAULT NOW() NOT NULL,
	PARENT_ID int unsigned NOT NULL,
	USER_ID int unsigned,
	POST_BY varchar(20) NOT NULL,
	PRIMARY KEY (ID)
);


CREATE TABLE QUERY
(
	ID int NOT NULL AUTO_INCREMENT,
	DOCTOR_ID int unsigned,
	PATIENT_ID int unsigned NOT NULL,
	CREATED_ON_DATE datetime DEFAULT NOW() NOT NULL,
	UPDATED_ON_DATE datetime DEFAULT NOW() NOT NULL,
	PRIMARY KEY (ID)
);


CREATE TABLE ROLE
(
	ROLE_NAME varchar(20) NOT NULL,
	PRIMARY KEY (ROLE_NAME)
);


CREATE TABLE SPECIALITIES
(
	SPECIALITY varchar(100) NOT NULL,
	PRIMARY KEY (SPECIALITY)
);


-- Users of Econsult
CREATE TABLE USER
(
	USER_ID int unsigned NOT NULL UNIQUE AUTO_INCREMENT,
	FIRST_NAME varchar(50) NOT NULL,
	LAST_NAME varchar(50),
	PASSWORD varchar(100) NOT NULL,
	CREATED_ON_DATE datetime DEFAULT NOW() NOT NULL,
	UPDATED_ON_DATE datetime DEFAULT NOW(),
	ROLE_NAME varchar(20) NOT NULL,
	PRIMARY KEY (USER_ID)
) COMMENT = 'Users of Econsult';



/* Create Foreign Keys */

ALTER TABLE PATIENT_ALLERGY
	ADD FOREIGN KEY (ALLERGY)
	REFERENCES ALLERGIES (ALLERGY)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE QUERY
	ADD FOREIGN KEY (DOCTOR_ID)
	REFERENCES DOCTOR (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DOCTOR_SPECIALITY
	ADD FOREIGN KEY (DOCTOR_ID)
	REFERENCES DOCTOR (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE PATIENT_ALLERGY
	ADD FOREIGN KEY (PATIENT_ID)
	REFERENCES PATIENT (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE QUERY
	ADD FOREIGN KEY (PATIENT_ID)
	REFERENCES PATIENT (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE POST
	ADD FOREIGN KEY (PARENT_ID)
	REFERENCES POST (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE POST
	ADD FOREIGN KEY (QUERY_ID)
	REFERENCES QUERY (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE POST
	ADD FOREIGN KEY (POST_BY)
	REFERENCES ROLE (ROLE_NAME)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE USER
	ADD FOREIGN KEY (ROLE_NAME)
	REFERENCES ROLE (ROLE_NAME)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DOCTOR_SPECIALITY
	ADD FOREIGN KEY (SPECIALITY)
	REFERENCES SPECIALITIES (SPECIALITY)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DOCTOR
	ADD FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE PATIENT
	ADD FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE POST
	ADD FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;



